import Sort from"./Sort.js";export default class RadixSort extends Sort{constructor(t){super(t)}getDigit(t,s){return Math.floor(Math.abs(t)/Math.pow(10,s))%10}digitCount(t){return 0===t?1:Math.floor(Math.log10(Math.abs(t)))+1}maxDigits(){let t=0;for(let s of this.array)t=Math.max(t,this.digitCount(s));return t}sort(){const t=this.maxDigits();for(let s=0;s<t;s++){let t=Array.from({length:10},(()=>[]));for(let t=0;t<this.array.length;t++)this.steps.push({type:"compare",indices:[t,t]});for(let e=0;e<this.array.length;e++){t[this.getDigit(this.array[e],s)].push(this.array[e]),this.steps.push({type:"compare",indices:[e,e]})}let e=0;for(let s=0;s<t.length;s++){t[s].length>0&&this.steps.push({type:"sorted",indices:[e,e+t[s].length-1]});for(let r of t[s])this.steps.push({type:"replace",indices:[e,e],values:[r]}),this.array[e]=r,e++}this.steps.push({type:"sorted",indices:[0,this.array.length-1]})}return this.steps.push({type:"finish",indices:[0,this.array.length-1]}),this.steps}}
//# sourceMappingURL=RadixSort.js.map