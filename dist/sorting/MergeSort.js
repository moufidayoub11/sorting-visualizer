import Sort from"./Sort.js";export default class MergeSort extends Sort{constructor(e){super(e)}merge(e,t,s,r){let h=[],i=0,p=0;for(;i<e.length&&p<t.length;)this.steps.push({type:"compare",indices:[s+i,r-t.length+p]}),e[i]<t[p]?(h.push(e[i]),i++):(h.push(t[p]),p++);for(;i<e.length;)h.push(e[i]),i++;for(;p<t.length;)h.push(t[p]),p++;this.steps.push({type:"replace",indices:[s,r],values:h});for(let e=0;e<h.length;e++)this.array[s+e]=h[e];this.steps.push({type:"sorted",indices:[s,r]})}mergeSortHelper(e,t,s){if(t>=s)return;const r=Math.floor((t+s)/2);this.mergeSortHelper(e,t,r),this.mergeSortHelper(e,r+1,s);const h=e.slice(t,r+1),i=e.slice(r+1,s+1);this.merge(h,i,t,s)}sort(){return this.mergeSortHelper(this.array,0,this.array.length-1),this.steps.push({type:"finish",indices:[0,this.array.length-1]}),this.steps}}
//# sourceMappingURL=MergeSort.js.map