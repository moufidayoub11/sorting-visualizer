import Sort from"./Sort.js";export default class HeapSort extends Sort{constructor(s){super(s)}heapify(s,t){let r=t;const i=2*t+1,a=2*t+2;i<s&&this.steps.push({type:"compare",indices:[t,i]}),i<s&&this.array[i]>this.array[r]&&(r=i),a<s&&this.steps.push({type:"compare",indices:[t,a]}),a<s&&this.array[a]>this.array[r]&&(r=a),r!==t&&(this.steps.push({type:"swap",indices:[t,r]}),[this.array[t],this.array[r]]=[this.array[r],this.array[t]],this.heapify(s,r))}sort(){const s=this.array.length;for(let t=Math.floor(s/2)-1;t>=0;t--)this.heapify(s,t);for(let t=s-1;t>0;t--)[this.array[0],this.array[t]]=[this.array[t],this.array[0]],this.steps.push({type:"swap",indices:[0,t]}),this.steps.push({type:"sorted",indices:[t,t]}),this.heapify(t,0);return this.steps.push({type:"finish",indices:[0,this.array.length-1]}),this.steps}}
//# sourceMappingURL=HeapSort.js.map