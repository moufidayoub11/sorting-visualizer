{"version":3,"sources":["script.js"],"names":["BarManager","async","loadMelodie","url","audioContext","buffer","response","fetch","arrayBuffer","decodeAudioData","error","console","document","addEventListener","barsContainer","querySelector","resetButton","sortButton","muteButton","algorithm_select","arraySizeSlider","window","AudioContext","selected_algorithm","value","bar_manager","resetBars","event","resizeBars","target","sortBars","e","this","mute","toggleMute","innerText"],"mappings":"OAAOA,eAAgB,uBAuCvBC,eAAeC,YAAYC,EAAKC,GAC5B,IAAIC,EAAS,KACb,IACI,MAAMC,QAAiBC,MAAMJ,GACvBK,QAAoBF,EAASE,cACnCH,QAAeD,EAAaK,gBAAgBD,GAC9C,MAAOE,GACLC,QAAQD,MAAM,qBAAsBA,GAExC,OAAOL,EA9CXO,SAASC,iBAAiB,oBAAoBZ,UAC1C,MAAMa,EAAgBF,SAASG,cAAc,mBACvCC,EAAcJ,SAASG,cAAc,yBACrCE,EAAaL,SAASG,cAAc,wBACpCG,EAAaN,SAASG,cAAc,0BACpCI,EAAmBP,SAASG,cAAc,qBAC1CK,EAAkBR,SAASG,cAAc,eAEzCX,EAAe,IAAIiB,OAAOC,aAEhC,IAAIC,EAAqBJ,EAAiBK,MACtCC,EAAc,IAAIzB,WAClBc,EACAM,EAAgBI,MAChBpB,GAGJY,EAAYH,iBAAiB,SAAS,IAAMY,EAAYC,cAExDN,EAAgBP,iBAAiB,SAAUc,GACvCF,EAAYG,WAAWD,EAAME,OAAOL,SAGxCP,EAAWJ,iBAAiB,SAASZ,SACjCwB,EAAYK,SAASP,KAGzBJ,EAAiBN,iBAAiB,UAAU,SAAUkB,GAClDR,EAAqBS,KAAKR,SAG9BN,EAAWL,iBAAiB,SAAS,KACjC,IAAIoB,EAAOR,EAAYS,aACvBhB,EAAWiB,UAAYF,EAAO,UAAY","file":"script.js","sourcesContent":["import BarManager from \"./bars/BarManager.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    const barsContainer = document.querySelector(\".bars-container\");\r\n    const resetButton = document.querySelector(\".navbar-buttons-clear\");\r\n    const sortButton = document.querySelector(\".navbar-buttons-sort\");\r\n    const muteButton = document.querySelector(\".navbar-buttons-volume\");\r\n    const algorithm_select = document.querySelector(\"#algorithm-select\");\r\n    const arraySizeSlider = document.querySelector(\"#array-size\");\r\n\r\n    const audioContext = new window.AudioContext();\r\n\r\n    let selected_algorithm = algorithm_select.value;\r\n    let bar_manager = new BarManager(\r\n        barsContainer,\r\n        arraySizeSlider.value,\r\n        audioContext\r\n    );\r\n\r\n    resetButton.addEventListener(\"click\", () => bar_manager.resetBars());\r\n\r\n    arraySizeSlider.addEventListener(\"input\", (event) =>\r\n        bar_manager.resizeBars(event.target.value)\r\n    );\r\n\r\n    sortButton.addEventListener(\"click\", async () =>\r\n        bar_manager.sortBars(selected_algorithm)\r\n    );\r\n\r\n    algorithm_select.addEventListener(\"change\", function (e) {\r\n        selected_algorithm = this.value;\r\n    });\r\n\r\n    muteButton.addEventListener(\"click\", () => {\r\n        let mute = bar_manager.toggleMute();\r\n        muteButton.innerText = mute ? \"Unmute!\" : \"mute\";\r\n    });\r\n});\r\n\r\nasync function loadMelodie(url, audioContext) {\r\n    let buffer = null;\r\n    try {\r\n        const response = await fetch(url);\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        buffer = await audioContext.decodeAudioData(arrayBuffer);\r\n    } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n    }\r\n    return buffer;\r\n}\r\n"]}